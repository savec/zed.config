// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "EmptyPane || (Editor && VimControl && !menu)",
    "bindings": {
      "ctrl-z": "workspace::ToggleZoom",
      "space t h": "workspace::ToggleLeftDock",
      "space t l": "workspace::ToggleRightDock",
      "space t j": "workspace::ToggleBottomDock",
      "space t z": "workspace::ToggleCenteredLayout",
      "space s f": "file_finder::Toggle",
      "space s w": "workspace::NewSearch",
      "space \\": "terminal_panel::ToggleFocus",
      "space e": "project_panel::ToggleFocus",
      "space o": "outline_panel::ToggleFocus",
      "space g": "git_panel::ToggleFocus",
      "space a": "agent::ToggleFocus",
      "space w s": "project_symbols::Toggle",
      "space d d": "diagnostics::Deploy"
    }
  },
  {
    "context": "GitPanel || ProjectPanel || CollabPanel || OutlinePanel || ChatPanel || VimControl || EmptyPane || SharedScreen || MarkdownPreview || KeyContextView || DebugPanel || Terminal || AgentPanel || DebugPanel",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Editor && VimControl && !menu",
    "bindings": {
      "ctrl-n": null,
      "ctrl-p": null,
      "space t b": "git::Blame",
      "space t i": "editor::ToggleInlayHints",
      "space t d": "editor::ToggleDiagnostics",
      "space c f": "editor::Format",
      "space c a": "editor::ToggleCodeActions",
      "space space": "tab_switcher::Toggle",
      "space d s": "outline::Toggle",
      "space c r": "editor::Rename",
      "g d": "editor::GoToDefinition",
      "g D": "editor::GoToDefinitionSplit",
      "g i": "editor::GoToImplementation",
      "g I": "editor::GoToImplementationSplit",
      "g t": "editor::GoToTypeDefinition",
      "g T": "editor::GoToTypeDefinitionSplit",
      "g r": "editor::FindAllReferences"
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimObject",
    "bindings": {
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp"
    }
  },
  {
    // tab switcher
    "context": "TabSwitcher > Picker",
    "bindings": {
      "ctrl-x": "tab_switcher::CloseSelectedItem"
    }
  },
  {
    "context": "vim_mode == normal || vim_mode == visual",
    "bindings": {
      "s": ["vim::PushSneak", {}],
      "S": ["vim::PushSneakBackward", {}]
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "ctrl-z": "workspace::ToggleZoom"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-t": "workspace::NewTerminal"
    }
  }
]
